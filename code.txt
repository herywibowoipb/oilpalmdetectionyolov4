# Step 1: Cloning and Building Darknet

# clone darknet repo
!git clone https://github.com/AlexeyAB/darknet
# change makefile to have GPU and OPENCV enabled
%cd darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile
!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile
# verify CUDA
!/usr/local/cuda/bin/nvcc --version
# make darknet (builds darknet so that you can then use the darknet executable file to run or train object detectors)
!make

# Step 2: Download pre-trained YOLOv4 weights

!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights

# Step 3: Define Helper Functions

# define helper functions
def imShow(path):
  import cv2
  import matplotlib.pyplot as plt
  %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()

# use this to upload files
def upload():
  from google.colab import files
  uploaded = files.upload() 
  for name, data in uploaded.items():
    with open(name, 'wb') as f:
      f.write(data)
      print ('saved file', name)

# use this to download a file  
def download(path):
  from google.colab import files
  files.download(path)
  
#Step 4: Dataset configuration and training setting 

#dataset configuration 
!cp /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/obj_832.data /content/darknet/data/obj_832.data
!cp /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/obj_832.names /content/darknet/data/obj_832.names
!cp /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/yolov4_custom_832.cfg /content/darknet/cfg/yolov4_custom_832.cfg
!unzip /content/drive/MyDrive/yoloshared/dataset/sawit200x200m_final_validation/obj.zip -d data/
!python /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/generate_train.py
!unzip /content/drive/MyDrive/yoloshared/dataset/sawit200x200m_final_validation/test.zip -d data/
!python /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/generate_test.py

#download pre-trained weights for the convolutional layers.
!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137

#training configuration
#Change save weights 500 iteration (line 386) and chekpoint 2 iteration (line 397)
!cp /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/detector.c /content/darknet/src/detector.c
# restart/make darknet (build)
!make

#Step 5: run training

#run training starting for the beginning
!./darknet detector train data/obj_832.data cfg/yolov4_custom_832.cfg yolov4.conv.137 -dont_show -map
#run training starting at the checkpoint
!./darknet detector train data/obj_832.data cfg/yolov4_custom_832.cfg /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/backup200x200m_final_random0_832_validation/yolov4_custom_832_last.weights -dont_show -map

#Step 6: check training results

#checkig mean Average Precision (mAP)
!./darknet detector map data/obj_832.data cfg/yolov4_custom_832.cfg /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/backup200x200m_final_random0_832_validation/yolov4_custom_best.weights

#Step 7: run detections

#custom cfg to test mode configuration 
%cd cfg
!sed -i 's/batch=64/batch=1/' yolov4_custom_832.cfg
!sed -i 's/subdivisions=32/subdivisions=1/' yolov4_custom_832.cfg
%cd ..

#configuration image.c
#hide class names and labels // line 436,438, 441-446
#configuration of thickness of the bounding box at line 369
!cp /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/image.c /content/darknet/src/image.c
# restart/make darknet (build)
!make

#run detector
!./darknet detector test data/obj_832.data cfg/yolov4_custom_832.cfg /content/drive/MyDrive/yoloshared/config/yolov4sawitconvo137/backup200x200m_final_random0_832_validation/yolov4_custom_832_4000.weights /content/drive/MyDrive/yoloshared/dataset/Test/final/400x300m_wil16_grid22.jpg -thresh 0.4 -ext_output -dont_show -out result.json
imShow('predictions.jpg')
download('predictions.jpg')
download('result.json')
